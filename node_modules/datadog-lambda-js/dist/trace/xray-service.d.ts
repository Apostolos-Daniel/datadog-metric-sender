import { SpanContextWrapper } from "./span-context-wrapper";
import { StepFunctionContext } from "./step-function-service";
export declare const AMZN_TRACE_ID_ENV_VAR = "_X_AMZN_TRACE_ID";
interface XrayTraceHeader {
    traceId: string;
    parentId: string;
    sampled: string;
}
export declare class XrayService {
    private readonly subsegmentName;
    private readonly subsegmentNamespace;
    private readonly baggageSubsegmentKey;
    private readonly subsegmentKey;
    private readonly lambdaFunctionTagsKey;
    addLambdaTriggerTags(triggerTags: {
        [key: string]: string;
    }): void;
    addStepFunctionContext(context: StepFunctionContext): void;
    addMetadata(metadata: Record<string, any>): void;
    private add;
    private generateSubsegment;
    static parseAWSTraceHeader(awsTraceHeader: string): XrayTraceHeader | undefined;
    private parseTraceContextHeader;
    private convertToSampleMode;
    private sendSubsegment;
    extract(): SpanContextWrapper | null;
    private get traceContext();
    private convertToParentId;
    private convertToTraceId;
    static extraceDDContextFromAWSTraceHeader(amznTraceId: string): SpanContextWrapper | null;
}
export {};
//# sourceMappingURL=xray-service.d.ts.map