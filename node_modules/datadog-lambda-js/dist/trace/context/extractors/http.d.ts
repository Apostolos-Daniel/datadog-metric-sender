import { EventTraceExtractor } from "../extractor";
import { TracerWrapper } from "../../tracer-wrapper";
import { SpanContextWrapper } from "../../span-context-wrapper";
export declare const AUTHORIZING_REQUEST_ID_HEADER = "x-datadog-authorizing-requestid";
export declare enum HTTPEventSubType {
    ApiGatewayV1 = "api-gateway-rest-api",
    ApiGatewayV2 = "api-gateway-http-api",
    ApiGatewayWebSocket = "api-gateway-websocket",
    Unknown = "unknown-sub-type"
}
export declare class HTTPEventTraceExtractor implements EventTraceExtractor {
    private tracerWrapper;
    private decodeAuthorizerContext;
    constructor(tracerWrapper: TracerWrapper, decodeAuthorizerContext?: boolean);
    extract(event: any): SpanContextWrapper | null;
    static getEventSubType(event: any): HTTPEventSubType;
    static getInjectedAuthorizerHeaders(event: any, eventSubType: HTTPEventSubType): any;
}
//# sourceMappingURL=http.d.ts.map