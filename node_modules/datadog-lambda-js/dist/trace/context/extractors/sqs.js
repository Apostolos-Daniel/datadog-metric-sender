"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.SQSEventTraceExtractor = void 0;
var utils_1 = require("../../../utils");
var xray_service_1 = require("../../xray-service");
var SQSEventTraceExtractor = /** @class */ (function () {
    function SQSEventTraceExtractor(tracerWrapper) {
        this.tracerWrapper = tracerWrapper;
    }
    SQSEventTraceExtractor.prototype.extract = function (event) {
        var _a, _b, _c, _d, _e, _f, _g;
        try {
            // First try to extract trace context from message attributes
            var headers = (_d = (_c = (_b = (_a = event === null || event === void 0 ? void 0 : event.Records) === null || _a === void 0 ? void 0 : _a[0]) === null || _b === void 0 ? void 0 : _b.messageAttributes) === null || _c === void 0 ? void 0 : _c._datadog) === null || _d === void 0 ? void 0 : _d.stringValue;
            if (headers !== undefined) {
                var traceContext = this.tracerWrapper.extract(JSON.parse(headers));
                if (traceContext) {
                    (0, utils_1.logDebug)("Extracted trace context from SQS event messageAttributes");
                    return traceContext;
                }
                else {
                    (0, utils_1.logDebug)("Failed to extract trace context from messageAttributes");
                }
            }
            // Then try to extract trace context from attributes.AWSTraceHeader. (Upstream Java apps can
            // pass down Datadog trace context in the attributes.AWSTraceHeader in SQS case)
            if (((_g = (_f = (_e = event === null || event === void 0 ? void 0 : event.Records) === null || _e === void 0 ? void 0 : _e[0]) === null || _f === void 0 ? void 0 : _f.attributes) === null || _g === void 0 ? void 0 : _g.AWSTraceHeader) !== undefined) {
                var traceContext = xray_service_1.XrayService.extraceDDContextFromAWSTraceHeader(event.Records[0].attributes.AWSTraceHeader);
                if (traceContext) {
                    (0, utils_1.logDebug)("Extracted trace context from SQS event attributes AWSTraceHeader");
                    return traceContext;
                }
                else {
                    (0, utils_1.logDebug)("No Datadog trace context found from SQS event attributes AWSTraceHeader");
                }
            }
        }
        catch (error) {
            if (error instanceof Error) {
                (0, utils_1.logDebug)("Unable to extract trace context from SQS event", error);
            }
        }
        return null;
    };
    return SQSEventTraceExtractor;
}());
exports.SQSEventTraceExtractor = SQSEventTraceExtractor;
//# sourceMappingURL=sqs.js.map