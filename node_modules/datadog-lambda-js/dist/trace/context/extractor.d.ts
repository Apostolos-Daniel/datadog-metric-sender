import { Context } from "aws-lambda";
import { TraceConfig } from "../listener";
import { TracerWrapper } from "../tracer-wrapper";
import { SpanContextWrapper } from "../span-context-wrapper";
export declare const DATADOG_TRACE_ID_HEADER = "x-datadog-trace-id";
export declare const DATADOG_PARENT_ID_HEADER = "x-datadog-parent-id";
export declare const DATADOG_SAMPLING_PRIORITY_HEADER = "x-datadog-sampling-priority";
export interface EventTraceExtractor {
    extract(event: any): SpanContextWrapper | null;
}
export interface DatadogTraceHeaders {
    [DATADOG_TRACE_ID_HEADER]: string;
    [DATADOG_PARENT_ID_HEADER]: string;
    [DATADOG_SAMPLING_PRIORITY_HEADER]: string;
}
export declare class TraceContextExtractor {
    private tracerWrapper;
    private config;
    private xrayService;
    private stepFunctionContextService?;
    constructor(tracerWrapper: TracerWrapper, config: TraceConfig);
    extract(event: any, context: Context): Promise<SpanContextWrapper | null>;
    private getTraceEventExtractor;
    private addTraceContextToXray;
}
//# sourceMappingURL=extractor.d.ts.map