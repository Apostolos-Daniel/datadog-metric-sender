"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.EventValidator = void 0;
var API_GATEWAY_EVENT_V2_VERSION = "2.0";
var EventValidator = /** @class */ (function () {
    function EventValidator() {
    }
    EventValidator.isAPIGatewayEvent = function (event) {
        var _a;
        return ((_a = event.requestContext) === null || _a === void 0 ? void 0 : _a.stage) !== undefined && event.httpMethod !== undefined && event.resource !== undefined;
    };
    EventValidator.isAPIGatewayEventV2 = function (event) {
        return (event.requestContext !== undefined &&
            event.version === API_GATEWAY_EVENT_V2_VERSION &&
            event.rawQueryString !== undefined &&
            !event.requestContext.domainName.includes("lambda-url"));
    };
    EventValidator.isAPIGatewayWebSocketEvent = function (event) {
        return event.requestContext !== undefined && event.requestContext.messageDirection !== undefined;
    };
    EventValidator.isSNSEvent = function (event) {
        return Array.isArray(event.Records) && event.Records.length > 0 && event.Records[0].Sns !== undefined;
    };
    EventValidator.isSNSSQSEvent = function (event) {
        if (Array.isArray(event.Records) && event.Records.length > 0 && event.Records[0].eventSource === "aws:sqs") {
            try {
                var body = JSON.parse(event.Records[0].body);
                if (body.Type === "Notification" && body.TopicArn) {
                    return true;
                }
            }
            catch (_) {
                return false;
            }
        }
        return false;
    };
    EventValidator.isEventBridgeSQSEvent = function (event) {
        if (Array.isArray(event.Records) && event.Records.length > 0 && event.Records[0].eventSource === "aws:sqs") {
            try {
                var body = JSON.parse(event.Records[0].body);
                return body["detail-type"] !== undefined;
            }
            catch (_) {
                return false;
            }
        }
        return false;
    };
    EventValidator.isAppSyncResolverEvent = function (event) {
        return event.info !== undefined && event.info.selectionSetGraphQL !== undefined;
    };
    EventValidator.isSQSEvent = function (event) {
        return Array.isArray(event.Records) && event.Records.length > 0 && event.Records[0].eventSource === "aws:sqs";
    };
    EventValidator.isEventBridgeEvent = function (event) {
        return event["detail-type"] !== undefined;
    };
    EventValidator.isKinesisStreamEvent = function (event) {
        return Array.isArray(event.Records) && event.Records.length > 0 && event.Records[0].kinesis !== undefined;
    };
    return EventValidator;
}());
exports.EventValidator = EventValidator;
//# sourceMappingURL=event-validator.js.map