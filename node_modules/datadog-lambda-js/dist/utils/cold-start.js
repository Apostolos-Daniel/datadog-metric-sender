"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports._resetColdStart = exports.getSandboxInitTags = exports.isProactiveInitialization = exports.didFunctionColdStart = exports.setSandboxInit = void 0;
var functionDidColdStart = true;
var proactiveInitialization = false;
var isColdStartSet = false;
/**
 * Use global variables to determine whether the container cold started
 * and if the start was proactively initialized
 * On the first container run, isColdStartSet and functionDidColdStart are true
 * For subsequent executions isColdStartSet will be true and functionDidColdStart will be false
 */
function setSandboxInit(initTime, invocationStartTime) {
    if (!isColdStartSet && invocationStartTime - initTime > 10000) {
        proactiveInitialization = true;
        functionDidColdStart = false;
    }
    else {
        functionDidColdStart = !isColdStartSet;
        proactiveInitialization = false;
    }
    isColdStartSet = true;
}
exports.setSandboxInit = setSandboxInit;
function didFunctionColdStart() {
    return functionDidColdStart;
}
exports.didFunctionColdStart = didFunctionColdStart;
function isProactiveInitialization() {
    return proactiveInitialization;
}
exports.isProactiveInitialization = isProactiveInitialization;
function getSandboxInitTags() {
    var tags = ["cold_start:".concat(didFunctionColdStart())];
    if (isProactiveInitialization()) {
        tags.push("proactive_initialization:true");
    }
    return tags;
}
exports.getSandboxInitTags = getSandboxInitTags;
// For testing, reset the globals to their original values
function _resetColdStart() {
    functionDidColdStart = true;
    proactiveInitialization = false;
    isColdStartSet = false;
}
exports._resetColdStart = _resetColdStart;
//# sourceMappingURL=cold-start.js.map